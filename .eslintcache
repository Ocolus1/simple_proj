[{"C:\\Users\\Cypherspot\\Documents\\school_project\\frontend\\src\\App.js":"1","C:\\Users\\Cypherspot\\Documents\\school_project\\frontend\\src\\index.js":"2","C:\\Users\\Cypherspot\\Documents\\school_project\\frontend\\src\\pages\\Home.js":"3","C:\\Users\\Cypherspot\\Documents\\school_project\\frontend\\src\\components\\Navigation.js":"4","C:\\Users\\Cypherspot\\Documents\\school_project\\frontend\\src\\pages\\Login.js":"5","C:\\Users\\Cypherspot\\Documents\\school_project\\frontend\\src\\pages\\Register.js":"6","C:\\Users\\Cypherspot\\Documents\\school_project\\frontend\\src\\components\\MainNav.js":"7","C:\\Users\\Cypherspot\\Documents\\school_project\\frontend\\src\\pages\\Main.js":"8","C:\\Users\\Cypherspot\\Documents\\school_project\\frontend\\src\\actions\\auth.js":"9","C:\\Users\\Cypherspot\\Documents\\school_project\\frontend\\src\\actions\\types.js":"10","C:\\Users\\Cypherspot\\Documents\\school_project\\frontend\\src\\reducers\\message.js":"11","C:\\Users\\Cypherspot\\Documents\\school_project\\frontend\\src\\reducers\\auth.js":"12","C:\\Users\\Cypherspot\\Documents\\school_project\\frontend\\src\\reducers\\index.js":"13"},{"size":558,"mtime":1610198154999,"results":"14","hashOfConfig":"15"},{"size":314,"mtime":1610464927696,"results":"16","hashOfConfig":"15"},{"size":1584,"mtime":1610646789941,"results":"17","hashOfConfig":"15"},{"size":1935,"mtime":1610544930508,"results":"18","hashOfConfig":"15"},{"size":3754,"mtime":1610823879296,"results":"19","hashOfConfig":"15"},{"size":3091,"mtime":1607616751836,"results":"20","hashOfConfig":"15"},{"size":908,"mtime":1607603580275,"results":"21","hashOfConfig":"15"},{"size":370,"mtime":1607603675993,"results":"22","hashOfConfig":"15"},{"size":6458,"mtime":1610724347385,"results":"23","hashOfConfig":"15"},{"size":839,"mtime":1610464830063,"results":"24","hashOfConfig":"15"},{"size":552,"mtime":1610646559603,"results":"25","hashOfConfig":"15"},{"size":2203,"mtime":1610653532926,"results":"26","hashOfConfig":"15"},{"size":169,"mtime":1610650880048,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1u6ig63",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},"C:\\Users\\Cypherspot\\Documents\\school_project\\frontend\\src\\App.js",[],"C:\\Users\\Cypherspot\\Documents\\school_project\\frontend\\src\\index.js",[],["58","59"],"C:\\Users\\Cypherspot\\Documents\\school_project\\frontend\\src\\pages\\Home.js",[],"C:\\Users\\Cypherspot\\Documents\\school_project\\frontend\\src\\components\\Navigation.js",[],"C:\\Users\\Cypherspot\\Documents\\school_project\\frontend\\src\\pages\\Login.js",[],"C:\\Users\\Cypherspot\\Documents\\school_project\\frontend\\src\\pages\\Register.js",[],["60","61"],"C:\\Users\\Cypherspot\\Documents\\school_project\\frontend\\src\\components\\MainNav.js",[],"C:\\Users\\Cypherspot\\Documents\\school_project\\frontend\\src\\pages\\Main.js",[],"C:\\Users\\Cypherspot\\Documents\\school_project\\frontend\\src\\actions\\auth.js",["62"],"import {\r\n    REGISTRATION_SUCCESS,\r\n    REGISTRATION_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    USER_LOADED_FAIL,\r\n    USER_LOADED_SUCCESS,\r\n    AUTHENTICATED_SUCCESS,\r\n    AUTHENTICATED_FAIL,\r\n    PASSWORD_RESET_SUCCESS,\r\n    PASSWORD_RESET_FAIL,\r\n    PASSWORD_RESET_CONFIRM_SUCCESS,\r\n    PASSWORD_RESET_CONFIRM_FAIL,\r\n    LOGOUT,\r\n    SET_MESSAGE\r\n} from \"./types\"\r\n\r\nimport axios from \"axios\";\r\n\r\nexport const checkAuthenticated = () => async dispatch => {\r\n    if (localStorage.getItem(\"access\")) {\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Authorization': `JWT ${localStorage.getItem(\"access\")}`\r\n            }\r\n        };\r\n\r\n        const body = JSON.stringify({ token: localStorage.getItem(\"access\") })\r\n\r\n        try {\r\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/verify/`, body, config)\r\n\r\n            if (res.data.code !== \"token_not_valid\") {\r\n                dispatch({\r\n                    type: AUTHENTICATED_SUCCESS\r\n                })\r\n                dispatch({\r\n                    type: SET_MESSAGE,\r\n                    payload: res.data.message,\r\n                });\r\n            }\r\n        } catch (err) {\r\n            const message =\r\n                (err.response && err.response.data && err.response.data.message) ||\r\n                err.message ||\r\n                err.toString();\r\n            dispatch({\r\n                type: AUTHENTICATED_FAIL\r\n            })\r\n            dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: message,\r\n            });\r\n        }\r\n    } else {\r\n        dispatch({\r\n            type: AUTHENTICATED_FAIL\r\n        })\r\n    }\r\n}\r\n\r\nexport const load_user = () => async dispatch => {\r\n    if (localStorage.getItem(\"access\")) {\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Authorization': `JWT ${localStorage.getItem(\"access\")}`,\r\n                \"Accept\": \"application/json\"\r\n            }\r\n        };\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/users/me/`, config);\r\n            dispatch({\r\n                type: USER_LOADED_SUCCESS,\r\n                payload: res.data\r\n            })\r\n        } catch (err) {\r\n            const message =\r\n                (err.response && err.response.data && err.response.data.message) ||\r\n                err.message ||\r\n                err.toString();\r\n            dispatch({\r\n                type: USER_LOADED_FAIL\r\n            })\r\n        }\r\n    } else {\r\n        dispatch({\r\n            type: USER_LOADED_FAIL\r\n        })\r\n    }\r\n};\r\n\r\nexport const login = (data) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    };\r\n    const body = JSON.stringify(data);\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/create/`, body, config);\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        })\r\n        dispatch(load_user());\r\n        alert(\"Login successful\")\r\n    } catch (err) {\r\n        const message = err.message;\r\n        dispatch({\r\n            type: LOGIN_FAIL,\r\n            payload: message,\r\n        })\r\n        dispatch({\r\n            type: SET_MESSAGE,\r\n            payload: message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const register = (email, username, password, re_password, is_student, is_teacher) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ email, username, password, re_password, is_student, is_teacher });\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/`, body, config);\r\n        dispatch({\r\n            type: REGISTRATION_SUCCESS,\r\n            payload: res.data\r\n        })\r\n        dispatch({\r\n            type: SET_MESSAGE,\r\n            payload: res.data.message,\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: REGISTRATION_FAIL\r\n        })\r\n        const message =\r\n            (err.response && err.response.data && err.response.data.message) ||\r\n            err.message ||\r\n            err.toString();\r\n        dispatch({\r\n            type: SET_MESSAGE,\r\n            payload: message,\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const reset_password = (email) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ email });\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password/`, body, config);\r\n\r\n        dispatch({\r\n            type: PASSWORD_RESET_SUCCESS\r\n        })\r\n        dispatch({\r\n            type: SET_MESSAGE,\r\n            payload: res.data.message,\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PASSWORD_RESET_FAIL\r\n        })\r\n        const message =\r\n            (err.response && err.response.data && err.response.data.message) ||\r\n            err.message ||\r\n            err.toString();\r\n        dispatch({\r\n            type: SET_MESSAGE,\r\n            payload: message,\r\n        });\r\n    }\r\n}\r\n\r\nexport const reset_password_confirm = (uid, token, new_password, re_new_password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ uid, token, new_password, re_new_password });\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password_confirm/`, body, config);\r\n\r\n        dispatch({\r\n            type: PASSWORD_RESET_CONFIRM_SUCCESS\r\n        })\r\n        dispatch({\r\n            type: SET_MESSAGE,\r\n            payload: res.data.message,\r\n        });\r\n        \r\n    } catch (err) {\r\n        dispatch({\r\n            type: PASSWORD_RESET_CONFIRM_FAIL\r\n        })\r\n        const message =\r\n            (err.response && err.response.data && err.response.data.message) ||\r\n            err.message ||\r\n            err.toString();\r\n        dispatch({\r\n            type: SET_MESSAGE,\r\n            payload: message,\r\n        });\r\n    }\r\n}\r\n\r\nexport const logout = () => async dispatch => {\r\n    dispatch({\r\n        type: LOGOUT\r\n    })\r\n}\r\n","C:\\Users\\Cypherspot\\Documents\\school_project\\frontend\\src\\actions\\types.js",[],"C:\\Users\\Cypherspot\\Documents\\school_project\\frontend\\src\\reducers\\message.js",[],"C:\\Users\\Cypherspot\\Documents\\school_project\\frontend\\src\\reducers\\auth.js",[],"C:\\Users\\Cypherspot\\Documents\\school_project\\frontend\\src\\reducers\\index.js",["63"],"import { combineReducers } from \"redux\";\r\nimport auth from \"./auth\";\r\nimport message from \"./message\";\r\n\r\nexport default combineReducers({\r\n  auth,\r\n  // message,\r\n});\r\n",{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"64","replacedBy":"68"},{"ruleId":"66","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":79,"column":19,"nodeType":"72","messageId":"73","endLine":79,"endColumn":26},{"ruleId":"70","severity":1,"message":"74","line":3,"column":8,"nodeType":"72","messageId":"73","endLine":3,"endColumn":15},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],["75"],["76"],"no-unused-vars","'message' is assigned a value but never used.","Identifier","unusedVar","'message' is defined but never used.","no-global-assign","no-unsafe-negation"]